#!/usr/bin/env python
import parcel
import argparse
import logging


logging.root.setLevel(logging.INFO)


def main(args):
    if args.verbose:
        logging.root.setLevel(logging.DEBUG)

    sthread_args = {
        'data_server_url': args.server.pop(0),
        'max_enc_threads': args.max_threads,
        'buffer_processes': args.buffer_processes,
        'prikey': args.prikey,
    }

    server = parcel.Server()
    server.start(host=args.host, port=args.port, sthread_args=sthread_args)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('server', metavar='server', type=str, nargs=1,
                        help='The url path of the data server')
    parser.add_argument('-p', '--port', default=9000, type=int,
                        help='parcel server port')
    parser.add_argument('-i', '--host', default='localhost', type=str,
                        help='parcel server port')
    parser.add_argument('-v', '--verbose', action='store_true',
                        help='verbose logging')
    parser.add_argument('-n', '--max-threads', type=int, default=4,
                        help='encryption threads to grant client')
    parser.add_argument('-b', '--buffer_processes', type=int, default=8,
                        help='Number of processes to use for async buffering from API')

    # Server private key options.
    parser.add_argument('-K', '--keyfile',
        dest='prikey',
        default=None,
        type=lambda x: argparse.FileType('r')(x).read(),
        help='Server RSA private key file.',
    )


    args = parser.parse_args()

    main(args)
